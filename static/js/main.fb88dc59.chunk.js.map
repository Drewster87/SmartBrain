{"version":3,"sources":["Components/NavBar/NavBar.js","Components/Logo/Logo.js","Components/ImageBar/ImageBar.js","Components/Rank/Rank.js","Components/PictureBox/PictureBox.js","Components/Signin/Signin.js","Components/Register/Register.js","App.js","serviceWorker.js","index.js","Components/Logo/logo.png"],"names":["NavBar","onRouteChange","isSignedIn","className","onClick","Logo","options","max","style","height","width","src","logo","alt","ImageBar","onImageSrcChange","onImageClick","type","onChange","Rank","PictureBox","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","htmlFor","name","value","Register","app","Clarifai","App","apiKey","calculateFaceLocation","data","faceData","outputs","regions","region_info","bounding_box","picture","document","getElementById","Number","left_col","right_col","top_row","bottom_row","displayFaceBox","setState","event","input","target","state","models","predict","then","response","catch","err","console","log","destination","route","this","params","particleOptions","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"mUAmCeA,G,cAhCA,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cAChB,OADgD,EAAjBC,WAG3B,yBAAKC,UAAU,cACb,uBACEC,QAAS,kBAAMH,EAAc,WAC7BE,UAAU,2CAFZ,aAUF,yBAAKA,UAAU,cACb,uBACEC,QAAS,kBAAMH,EAAc,WAC7BE,UAAU,2CAFZ,UAMA,uBACEC,QAAS,kBAAMH,EAAc,aAC7BE,UAAU,2CAFZ,e,kCCHOE,G,OAhBF,WACX,OACE,yBAAKF,UAAU,kBACb,kBAAC,IAAD,CACEA,UAAU,OACVG,QAAS,CAAEC,IAAK,IAChBC,MAAO,CAAEC,OAAQ,IAAKC,MAAO,MAE7B,yBAAKP,UAAU,cACb,yBAAKQ,IAAKC,IAAMC,IAAI,UCcfC,G,OAzBE,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,iBAAkBC,EAAmB,EAAnBA,aACpC,OACE,6BACE,uBAAGb,UAAU,MACV,uEAEH,yBAAKA,UAAU,UACb,yBAAKA,UAAU,gCACb,2BACEA,UAAU,qBACVc,KAAK,MACLC,SAAUH,IAEZ,4BACEZ,UAAU,+CACVC,QAASY,GAFX,eCLKG,EATF,WACX,OACE,yBAAKhB,UAAU,WACb,yBAAKA,UAAU,mBAAmB,gCAClC,yBAAKA,UAAU,mBAAmB,QCgBzBiB,G,OAnBI,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,IAC9B,OACE,yBAAKnB,UAAU,aACb,yBAAKA,UAAU,gBACb,yBAAKoB,GAAG,UAAUZ,IAAKU,EAAUR,IAAI,KACrC,yBACEV,UAAU,eACVK,MAAO,CACLgB,IAAKF,EAAIG,OACTC,MAAOJ,EAAIK,SACXC,OAAQN,EAAIO,UACZC,KAAMR,EAAIS,eCqCPC,EAjDA,SAAC,GAAuB,IAArB/B,EAAoB,EAApBA,cAChB,OACE,6BAASE,UAAU,4EACjB,0BAAMA,UAAU,gBACd,yBAAKA,UAAU,WACb,8BAAUoB,GAAG,UAAUpB,UAAU,6BAC/B,4BAAQA,UAAU,kBAAlB,WACA,yBAAKA,UAAU,OACb,2BAAOA,UAAU,oBAAoB8B,QAAQ,iBAA7C,SAGA,2BACE9B,UAAU,qEACVc,KAAK,QACLiB,KAAK,gBACLX,GAAG,mBAGP,yBAAKpB,UAAU,OACb,2BAAOA,UAAU,oBAAoB8B,QAAQ,YAA7C,YAGA,2BACE9B,UAAU,uEACVc,KAAK,WACLiB,KAAK,WACLX,GAAG,eAIT,yBAAKpB,UAAU,IACb,2BACIC,QAAS,kBAAMH,EAAc,SAC/BE,UAAU,uEACVc,KAAK,SACLkB,MAAM,aAGV,yBAAKhC,UAAU,eACb,uBAAGC,QAAS,kBAAMH,EAAc,aAAaE,UAAU,gCAAvD,iBCqBGiC,EA5DE,SAAC,GAAuB,IAArBnC,EAAoB,EAApBA,cAClB,OACE,6BAASE,UAAU,4EACjB,0BAAMA,UAAU,gBACd,yBAAKA,UAAU,WACb,8BAAUoB,GAAG,UAAUpB,UAAU,6BAC/B,4BAAQA,UAAU,kBAAlB,YACA,yBAAKA,UAAU,OACb,2BAAOA,UAAU,oBAAoB8B,QAAQ,QAA7C,QAGA,2BACE9B,UAAU,qEACVc,KAAK,OACLiB,KAAK,OACLX,GAAG,UAGP,yBAAKpB,UAAU,OACb,2BAAOA,UAAU,oBAAoB8B,QAAQ,iBAA7C,SAGA,2BACE9B,UAAU,qEACVc,KAAK,QACLiB,KAAK,gBACLX,GAAG,mBAGP,yBAAKpB,UAAU,OACb,2BAAOA,UAAU,oBAAoB8B,QAAQ,YAA7C,YAGA,2BACE9B,UAAU,uEACVc,KAAK,WACLiB,KAAK,WACLX,GAAG,eAIT,yBAAKpB,UAAU,IACb,2BACEC,QAAS,kBAAMH,EAAc,SAC7BE,UAAU,uEACVc,KAAK,SACLkB,MAAM,cAGV,yBAAKhC,UAAU,eACb,uBAAGC,QAAS,kBAAMH,EAAc,WAAWE,UAAU,gCAArD,a,iCCvCNkC,EAAM,I,OAAIC,EAASC,KAAI,CAC3BC,OAAQ,qCAwFKD,E,kDApFb,aAAe,IAAD,8BACZ,gBAUFE,sBAAwB,SAACC,GACvB,IAAMC,EAAWD,EAAKE,QAAQ,GAAGF,KAAKG,QAAQ,GAAGC,YAAYC,aACvDC,EAAUC,SAASC,eAAe,WAClCxC,EAAQyC,OAAOH,EAAQtC,OACvBD,EAAS0C,OAAOH,EAAQvC,QAC9B,MAAO,CACLsB,QAASY,EAASS,SAAW1C,EAC7BiB,SAAUjB,EAAQiC,EAASU,UAAY3C,EACvCe,OAAQkB,EAASW,QAAU7C,EAC3BoB,UAAWpB,EAASkC,EAASY,WAAa9C,IApBhC,EAwBd+C,eAAiB,SAAClC,GAChB,EAAKmC,SAAS,CAAEnC,IAAKA,KAzBT,EA4BdP,iBAAmB,SAAC2C,GAClB,EAAKD,SAAS,CAAEE,MAAOD,EAAME,OAAOzB,SA7BxB,EAgCdnB,aAAe,WACb,EAAKyC,SAAS,CAAEpC,SAAU,EAAKwC,MAAMF,QACrCtB,EAAIyB,OACDC,QAAQ,mCAAoC,EAAKF,MAAMF,OACvDK,MAAK,SAACC,GAAD,OACJ,EAAKT,eAAe,EAAKf,sBAAsBwB,OAEhDC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAvClB,EA0CdlE,cAAgB,SAACqE,GACK,SAAhBA,EACF,EAAKb,SAAS,CAAEvD,YAAY,IACvB,EAAKuD,SAAS,CAAEvD,YAAY,IACnC,EAAKuD,SAAS,CAAEc,MAAOD,KA5CvB,EAAKT,MAAQ,CACXF,MAAO,GACPtC,SAAU,GACVC,IAAK,GACLiD,MAAO,SACPrE,YAAY,GAPF,E,qDAiDJ,IAAD,EACmCsE,KAAKX,MAAvCF,EADD,EACCA,MAAOrC,EADR,EACQA,IAAKiD,EADb,EACaA,MAAOrE,EADpB,EACoBA,WAC3B,OACE,yBAAKC,UAAU,OACb,kBAAC,IAAD,CAAWA,UAAU,YAAYsE,OAAQC,IACzC,kBAAC,EAAD,CACExE,WAAYA,EACZD,cAAeuE,KAAKvE,gBAEX,WAAVsE,EACC,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQtE,cAAeuE,KAAKvE,iBAElB,aAAVsE,EACF,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAUtE,cAAeuE,KAAKvE,iBAGhC,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEc,iBAAkByD,KAAKzD,iBACvBC,aAAcwD,KAAKxD,eAErB,kBAAC,EAAD,CAAYK,SAAUsC,EAAOrC,IAAKA,U,GA7E5BqD,aCLEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFlC,SAASC,eAAe,SDwHpB,kBAAmBkC,WACrBA,UAAUC,cAAcC,MACrBtB,MAAK,SAAAuB,GACJA,EAAaC,gBAEdtB,OAAM,SAAAuB,GACLrB,QAAQqB,MAAMA,EAAMC,a,mBEzI5BC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.fb88dc59.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./NavBar.css\";\r\n\r\nconst NavBar = ({ onRouteChange, isSignedIn }) => {\r\n  if (isSignedIn) {\r\n    return (\r\n      <nav className=\"navigation\">\r\n        <p\r\n          onClick={() => onRouteChange(\"signin\")}\r\n          className=\"f3 link dim black underline pa3 pointer\"\r\n        >\r\n          Sign Out\r\n        </p>\r\n      </nav>\r\n    );\r\n  } else {\r\n    return (\r\n      <nav className=\"navigation\">\r\n        <p\r\n          onClick={() => onRouteChange(\"signin\")}\r\n          className=\"f3 link dim black underline pa3 pointer\"\r\n        >\r\n          SignIn\r\n        </p>\r\n        <p\r\n          onClick={() => onRouteChange(\"register\")}\r\n          className=\"f3 link dim black underline pa3 pointer\"\r\n        >\r\n          Register\r\n        </p>\r\n      </nav>\r\n    );\r\n  }\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport logo from \"./logo.png\";\r\nimport Tilt from \"react-tilt\";\r\nimport \"./Logo.css\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"ma4 mt0 shadow\">\r\n      <Tilt\r\n        className=\"Tilt\"\r\n        options={{ max: 60 }}\r\n        style={{ height: 100, width: 100 }}\r\n      >\r\n        <div className=\"Tilt-inner\">\r\n          <img src={logo} alt=\"\" />\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport \"./ImageBar.css\";\r\n\r\nconst ImageBar = ({ onImageSrcChange, onImageClick }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"f3\">\r\n        {\"This Magic Brain will detect faces in your pictures. Give it a try!\"}\r\n      </p>\r\n      <div className=\"center\">\r\n        <div className=\"form center pa4 br3 shadow-5\">\r\n          <input\r\n            className=\"f4 pa2 w-70 center\"\r\n            type=\"tex\"\r\n            onChange={onImageSrcChange}\r\n          />\r\n          <button\r\n            className=\"w-30 grow f4 link ph3 pv2 dib white bg-green\"\r\n            onClick={onImageClick}\r\n          >\r\n            Detect\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageBar;\r\n","import React from \"react\";\r\n\r\nconst Rank = () => {\r\n  return (\r\n    <div className=\"rankBox\">\r\n      <div className=\"white f3 center\">{\"Drew your current rank is...\"}</div>\r\n      <div className=\"white f1 center\">{\"#5\"}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rank;\r\n","import React from \"react\";\r\nimport \"./PictureBox.css\";\r\n\r\nconst PictureBox = ({ imageUrl, box }) => {\r\n  return (\r\n    <div className=\"center ma\">\r\n      <div className=\"absolute mt2\">\r\n        <img id=\"faceImg\" src={imageUrl} alt=\"\" />\r\n        <div\r\n          className=\"bounding-box\"\r\n          style={{\r\n            top: box.topRow,\r\n            right: box.rightCol,\r\n            bottom: box.bottomRow,\r\n            left: box.leftCol,\r\n          }}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PictureBox;\r\n","import React from \"react\";\r\n\r\nconst Signin = ({ onRouteChange }) => {\r\n  return (\r\n    <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n      <main className=\"pa4 black-80\">\r\n        <div className=\"measure\">\r\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n            <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n            <div className=\"mt3\">\r\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                Email\r\n              </label>\r\n              <input\r\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                type=\"email\"\r\n                name=\"email-address\"\r\n                id=\"email-address\"\r\n              />\r\n            </div>\r\n            <div className=\"mv3\">\r\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                Password\r\n              </label>\r\n              <input\r\n                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n              />\r\n            </div>\r\n          </fieldset>\r\n          <div className=\"\">\r\n            <input\r\n                onClick={() => onRouteChange('home')}\r\n              className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n              type=\"submit\"\r\n              value=\"Sign in\"\r\n            />\r\n          </div>\r\n          <div className=\"lh-copy mt3\">\r\n            <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">\r\n              Register\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React from \"react\";\r\n\r\nconst Register = ({ onRouteChange }) => {\r\n  return (\r\n    <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n      <main className=\"pa4 black-80\">\r\n        <div className=\"measure\">\r\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n            <div className=\"mt3\">\r\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\r\n                Name\r\n              </label>\r\n              <input\r\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n              />\r\n            </div>\r\n            <div className=\"mt3\">\r\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                Email\r\n              </label>\r\n              <input\r\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                type=\"email\"\r\n                name=\"email-address\"\r\n                id=\"email-address\"\r\n              />\r\n            </div>\r\n            <div className=\"mv3\">\r\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                Password\r\n              </label>\r\n              <input\r\n                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n              />\r\n            </div>\r\n          </fieldset>\r\n          <div className=\"\">\r\n            <input\r\n              onClick={() => onRouteChange(\"home\")}\r\n              className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n              type=\"submit\"\r\n              value=\"Register\"\r\n            />\r\n          </div>\r\n          <div className=\"lh-copy mt3\">\r\n            <p onClick={() => onRouteChange('signin')} className=\"f6 link dim black db pointer\">\r\n              Back\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport NavBar from \"./Components/NavBar/NavBar\";\r\nimport Logo from \"./Components/Logo/Logo\";\r\nimport ImageBar from \"./Components/ImageBar/ImageBar\";\r\nimport Rank from \"./Components/Rank/Rank\";\r\nimport PictureBox from \"./Components/PictureBox/PictureBox\";\r\nimport Signin from \"./Components/Signin/Signin\";\r\nimport Register from \"./Components/Register/Register\";\r\nimport Particles from \"react-particles-js\";\r\nimport particleOptions from \"./particlesjs-config.json\";\r\nimport Clarifai from \"clarifai\";\r\n\r\nconst app = new Clarifai.App({\r\n  apiKey: \"811d1551954b488db6418389c99a61e5\",\r\n});\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      input: \"\",\r\n      imageUrl: \"\",\r\n      box: {},\r\n      route: \"signin\",\r\n      isSignedIn: false,\r\n    };\r\n  }\r\n\r\n  calculateFaceLocation = (data) => {\r\n    const faceData = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n    const picture = document.getElementById(\"faceImg\");\r\n    const width = Number(picture.width);\r\n    const height = Number(picture.height);\r\n    return {\r\n      leftCol: faceData.left_col * width,\r\n      rightCol: width - faceData.right_col * width,\r\n      topRow: faceData.top_row * height,\r\n      bottomRow: height - faceData.bottom_row * height,\r\n    };\r\n  };\r\n\r\n  displayFaceBox = (box) => {\r\n    this.setState({ box: box });\r\n  };\r\n\r\n  onImageSrcChange = (event) => {\r\n    this.setState({ input: event.target.value });\r\n  };\r\n\r\n  onImageClick = () => {\r\n    this.setState({ imageUrl: this.state.input });\r\n    app.models\r\n      .predict(\"a403429f2ddf4b49b307e318f00e528b\", this.state.input)\r\n      .then((response) =>\r\n        this.displayFaceBox(this.calculateFaceLocation(response))\r\n      )\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  onRouteChange = (destination) => {\r\n    if (destination === \"home\") {\r\n      this.setState({ isSignedIn: true });\r\n    } else this.setState({ isSignedIn: false });\r\n    this.setState({ route: destination });\r\n  };\r\n\r\n  render() {\r\n    const { input, box, route, isSignedIn } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <Particles className=\"particles\" params={particleOptions} />\r\n        <NavBar\r\n          isSignedIn={isSignedIn}\r\n          onRouteChange={this.onRouteChange}\r\n        />\r\n        {route === \"signin\" ? (\r\n          <div>\r\n            <Logo />\r\n            <Signin onRouteChange={this.onRouteChange} />\r\n          </div>\r\n        ) : route === \"register\" ? (\r\n          <div>\r\n            <Logo />\r\n            <Register onRouteChange={this.onRouteChange} />\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Logo />\r\n            <Rank />\r\n            <ImageBar\r\n              onImageSrcChange={this.onImageSrcChange}\r\n              onImageClick={this.onImageClick}\r\n            />\r\n            <PictureBox imageUrl={input} box={box} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.a4c04dc3.png\";"],"sourceRoot":""}