{"version":3,"sources":["Components/NavBar/NavBar.js","Components/Logo/Logo.js","Components/ImageBar/ImageBar.js","Components/Rank/Rank.js","Components/PictureBox/PictureBox.js","App.js","serviceWorker.js","index.js","Components/Logo/logo.png"],"names":["NavBar","className","Logo","options","max","style","height","width","src","logo","alt","ImageBar","onImageSrcChange","onImageClick","type","onChange","onClick","Rank","PictureBox","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","app","Clarifai","App","apiKey","calculateFaceLocation","data","faceData","outputs","regions","region_info","bounding_box","picture","document","getElementById","Number","left_col","right_col","top_row","bottom_row","displayFaceBox","setState","event","input","target","value","state","models","predict","then","response","catch","err","console","log","params","particleOptions","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.4d3bbb96.chunk.js","sourcesContent":["import React from 'react';\r\nimport './NavBar.css';\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className='navigation'>\r\n            <p className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport logo from './logo.png';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className='ma4 mt0 shadow'>\r\n            <Tilt className=\"Tilt\" options={{ max: 60 }} style={{ height: 100, width: 100 }} >\r\n                <div className=\"Tilt-inner\">\r\n                    <img src={logo} alt=\"\" />\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageBar.css'\r\n\r\n\r\n\r\nconst ImageBar = ({ onImageSrcChange, onImageClick }) => {\r\n\treturn (\r\n\t\t<div> \r\n\t\t\t<p className='f3'>\r\n\t\t\t\t{'This Magic Brain will detect faces in your pictures. Give it a try!'}\r\n\t\t\t</p>\r\n\t\t\t<div className='center'>\r\n\t\t\t\t<div className=\"form center pa4 br3 shadow-5\">\r\n\t\t\t\t\t<input className='f4 pa2 w-70 center' type='tex' onChange={onImageSrcChange}/>\r\n\t\t\t\t\t<button \r\n\t\t\t\t\tclassName='w-30 grow f4 link ph3 pv2 dib white bg-green'\r\n\t\t\t\t\tonClick={onImageClick}\r\n\t\t\t\t\t>Detect</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ImageBar;","import React from 'react';\r\n\r\nconst Rank = () => {\r\n    return (\r\n        <div className='rankBox'>\r\n            <div className='white f3 center'>\r\n                {'Drew your current rank is...'}\r\n            </div>\r\n            <div className='white f1 center'>\r\n                {'#5'}\r\n            </div>\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './PictureBox.css';\r\n\r\nconst PictureBox = ({ imageUrl, box }) => {\r\n    return (\r\n        <div className='center ma'>\r\n            <div className='absolute mt2'>\r\n                <img id='faceImg' src={imageUrl} alt=\"\" />\r\n                <div className='bounding-box' style={{ top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol }}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PictureBox;\r\n\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport NavBar from './Components/NavBar/NavBar';\r\nimport Logo from './Components/Logo/Logo';\r\nimport ImageBar from './Components/ImageBar/ImageBar';\r\nimport Rank from './Components/Rank/Rank';\r\nimport PictureBox from './Components/PictureBox/PictureBox';\r\nimport Particles from 'react-particles-js';\r\nimport particleOptions from './particlesjs-config.json';\r\nimport Clarifai from 'clarifai'\r\n\r\n// Heads up that the Clarifai API has been updated since I made the next video. You will get an error using Clarifai.DETECT_FACE,  it appears to have changed (Read more about it here: https://clarifai.com/developer/guide).\r\n\r\n// Also, the URL in the next video has also been updated. Keep this in mind as you go through the exercise:\r\n\r\n// // This part has been updated with the recent Clarifai changes. Used to be:\r\n// // .predict(Clarifai.FACE_DETECT_MODEL, req.body.input)\r\n// app.models.predict('c0c0ac362b03416da06ab3fa36fb58e3', this.state.input)\r\n\r\nconst app = new Clarifai.App({\r\n  apiKey: '811d1551954b488db6418389c99a61e5'\r\n});\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      input: '',\r\n      imageUrl: '',\r\n      box: {}\r\n    }\r\n  }\r\n\r\n  calculateFaceLocation = (data) => {\r\n    const faceData = data.outputs[0].data.regions[0].region_info.bounding_box\r\n    const picture = document.getElementById('faceImg');\r\n    const width = Number(picture.width);\r\n    const height = Number(picture.height);\r\n    return {\r\n      leftCol: faceData.left_col * width,\r\n      rightCol: width - (faceData.right_col * width),\r\n      topRow: faceData.top_row * height,\r\n      bottomRow: height - (faceData.bottom_row * height)\r\n    }\r\n  }\r\n\r\n  displayFaceBox = (box) => {\r\n    this.setState({box: box})\r\n  }\r\n\r\n  onImageSrcChange = (event) => {\r\n    this.setState({ input: event.target.value });\r\n  }\r\n\r\n  onImageClick = () => {\r\n    this.setState({ imageUrl: this.state.input })\r\n    app.models.predict(\"a403429f2ddf4b49b307e318f00e528b\", this.state.input)\r\n    .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Particles className='particles'\r\n          params={particleOptions}\r\n        />\r\n        <NavBar />\r\n        <Logo />\r\n        <Rank />\r\n        <ImageBar\r\n          onImageSrcChange={this.onImageSrcChange}\r\n          onImageClick={this.onImageClick} />\r\n        <PictureBox imageUrl={this.state.input} box={this.state.box} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.a4c04dc3.png\";"],"sourceRoot":""}